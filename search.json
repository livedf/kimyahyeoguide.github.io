["HTML, CSS 코딩 가이드 제작 : 김야혀 제작일 : 2018 년 3 / 9 참고 : 구글 스타일가이드, NHN 코딩 컨벤션 ","목차 1장. 개요 코딩 가이드의 필요성을 설명한다. 2장. HTML 코딩 가이드 HTML 코드의 기본 작성 규칙과 들여쓰기, 빈 줄 사용, DTD 및 인코딩 선언, 주석 표기 규칙을 설명한다. 3장. CSS 작성 규칙 HTML 엘리먼트 종류별 작성 규칙을 설명한다. 4장. 네이밍 규칙 id/class, 이미지, 파일, 폴더의 네이밍 규칙을 설명한다. 5장. 웹 접근성 보장 방법 웹 접근성을 보장하도록 마크업하는 방법을 설명한다. ","마크업 개발은 프런트-엔드 페이지의 기본 골격을 형성하기 때문에 디자인, 브라우 저, 스크립트, 성능, 접근성 등과 긴밀한 관계가 있다. 즉, 마크업 개발을 잘 해야 모 든 브라우저에서 콘텐츠를 손실 없이, 빠르고 쉽게 사용자에게 전달할 수 있다. 코딩 컨벤션은 이러한 조건을 만족시키기 위해 마크업 개발자가 지켜야 할 표준을 제시한 다. 또한, 유지보수에 투자되는 비용을 최소화하기 위해 통읷된 코드 작성법을 제시한 다. 코드를 최초로 작성한 사람이 끝까지 유지보수할 확률은 매우 낮다. 따라서 최초 개발자가 아닌 사람도 코드를 빠르고 정확하게 이해할 수 있도록 작성하는 것은 코드 의 유지보수 비용을 절감하고 업무 효율을 높이는 데 결정적인 역할을 한다. 적어도 한 프로젝트의 맀크업 코드는 같은 코딩 컨벤션에 따라 작성해야 핚다. 코딩 컨벤션을 준수하면 프로젝트 멤버 간 코드 공유도 쉬워지고, 일관성 있게 코드를 작 성할 수 있다. 어떤 코딩 컨벤션을 선택하느냐가 중요한 것이 아니라, 통일된 기준으 로 소스 코드를 작성하는 것이 중요하다. ","<ul> <li>Fantastic <li>Great </ul> .example { color: blue; 2. HTML 코딩 가이드 2.1 일반 스타일 규칙 2.1.1 프로토콜 가능하면 link, script, import 시에 HTTPS 프로토콜을 사용하십시오. HTTPS를 https:통해 각 파일을 사용할 수없는 경우가 아니면 이미지 및 기타 미디어 파일, 스타일 시트 및 스크립트에 항상 HTTPS 프로토콜 ( )을 사용하십시오 . <!-- 권장되지 않음: omits the protocol --> <script src=//ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js></script> <!-- 권장되지 않음: uses the HTTP protocol --> <script src=http://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js></script> <!-- 권장되는 방법 --> <script src=https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js></script> /* 권장되지 않음: omits the protocol */ @import '//fonts.googleapis.com/css?family=Open+Sans'; /* 권장되지 않음: uses the HTTP protocol */ @import 'http://fonts.googleapis.com/css?family=Open+Sans'; /* 권장되는 방법 */ @import 'https://fonts.googleapis.com/css?family=Open+Sans'; 2.2 일반 서식 규칙 2.2.1 들여 쓰기 한 번에 2 칸 씩 들여 쓰기하십시오. 들여 쓰기에 탭을 사용하거나 탭과 스페이스를 섞지 마십시오. ","} <!-- 권장되지 않음 --> <A HREF=/>Home</A> <!-- 권장되는 방법 --> <img src=google.png alt=Google> /* 권장되지 않음 */ color: #E5E5E5; /* 권장되는 방법 */ color: #e5e5e5; 2.2.3 후행 공백 후행 공백을 제거하십시오. 후행 공백은 불필요하며 diff를 복잡하게 만들 수 있습니다. <!-- 권장되지 않음 --> <p>What?_ <!-- 권장되는 방법 --> <p>Yes please. 2.2.2 대문자 사용 규칙 소문자 만 사용하십시오. 모든 코드는 소문자 여야합니다. HTML 요소 이름, 속성, 속성 값 (제외 text/CDATA), CSS 선택기, 속성 및 속성 값 (문자열 제외)에 적용됩니다. 2.3 일반 메타 규칙 2.3.1 인코딩 UTF-8 (BOM 없음)을 사용하십시오. 편집기가 바이트 순서 표시없이 UTF-8을 문자 인코딩으로 사용하는지 확인하십시오. ","{# TODO(john.doe): revisit centering #} <center>Test</center> <!-- TODO: remove optional tags --> <ul> <li>Apples</li> <li>Oranges</li> </ul> meta tag 통해 HTML 템플리트 및 문서에서 인코딩을 지정하십시오 <meta charset=utf-8>. 스타일 시트의 인코딩은 UTF-8로 가정하므로 지정하지 마십시오. (인코딩에 대한 자세한 내용과 HTML 및 CSS의 문자 인코딩 처리 방법에 대한 자세 한 내용은 위치 및 방법을 참조하십시오 .) 2.3.2 주석 가능한 경우 코드를 설명하십시오. 주석을 사용하여 코드를 설명하십시오 :이 코드는 무엇을 다루고, 어떤 목적을 가지고 있으며, 각각의 솔루션이 사용되거나 선호되는 이유는 무엇입니까? (이 항목은 문서화 된 코드를 항상 요구한다는 현실적인 기대치로 간주되지 않으므로 선택 사항입니다. 마일리지는 HTML 및 CSS 코드에 따라 크게 다를 수 있으며 프로 젝트의 복잡성에 따라 달라질 수 있습니다.) 2.3.3 작업 항목 수행 할 작업과 할 일을 표시하십시오 TODO. 키워드 TODO만 사용하여 작업 표시를 강조 표시하고 다른 일반적인 형식은 표시하 지 않습니다 @@. 형식과 마찬가지로 괄호 안에 연락처 (사용자 이름 또는 메일 목록)를 추가하십시오 TODO(contact). 콜론 뒤에 액션 항목을 추가하십시오 TODO: action item. ","<!-- 권장되지 않음 --> <p>test text <br /> test text </p> <!-- 권장되는 방법 --> <p>test text <br> test text </p> 2.3 HTML 2.3.1 HTML 스타일 규칙 2.3.1.1 문서 유형 HTML5를 사용하십시오. HTML5 (HTML 구문)는 모든 HTML 문서에서 선호됩니다 <!DOCTYPE html>. HTML을 사용하는 것이 좋습니다 .XHTML을 사용 하지 마십시오 application/xhtml+xml.XHTML은 브라우저 및 인프라 지원이 부족하고 HTML보다 최 적화 할 여지가 적습니다. HTML에서는 문제가 없지만 void 요소를 닫지 <br> 마십시오 <br />. 즉, 쓰기 가 아닌 요소를 닫지 마십시오. 2.3.1.2 HTML의 유효성 가능한 경우 유효한 HTML을 사용하십시오. 파일 크기와 관련하여 성취 할 수없는 성능 목표 때문에 가능하지 않은 경우를 제외 하고 올바른 HTML 코드를 사용하십시오. 테스트 할 때 W3C HTML 검사기 와 같은 도구를 사용하십시오 . 유효한 HTML을 사용하는 것은 기술적 요구 사항 및 제약 조건을 학습하고 HTML 사 용을 보장하는 측정 가능한 기준 품질 속성입니다. ","<!-- 권장되지 않음 --> <title>Test</title> <article>This is only a test. <!-- 권장되는 방법 --> <!DOCTYPE html> <meta charset=utf-8> <title>Test</title> <article>This is only a test.</article> <!-- 권장되지 않음 --> <div onclick=goToRecommendations();>All recommendations</div> <!-- 권장되는 방법 --> <a href=recommendations/>All recommendations</a> 2.3.1.3 의미론 목적에 따라 HTML을 사용하십시오. 엘리먼트 (종종 태그라고 잘못 부름)를 사용하여 요소가 만들어 졌는지 확인하십시 오. 예를 들어 머리글, p단락 a요소, 앵커 요소 등의 머리글 요소를 사용합니다 . 접근성, 재사용 및 코드 효율성의 이유로 HTML을 용도에 따라 사용하는 것이 중요합 니다. 2.3.1.4 멀티미디어 폴백 멀티미디어를위한 대체 컨텐츠를 제공하십시오. HTML을 통해 멀티미디어, 이미지, 비디오, 애니메이션 개체를 통해 canvas, 대체 액 세스를 제공해야합니다. 의미있는 대체 텍스트 ( alt) 사용을 의미하는 이미지 및 비디 오 및 오디오 사본 및 캡션 (있는 경우). ","<!-- 권장되지 않음 --> <img src=spreadsheet.png> <!-- 권장되는 방법 --> <img src=spreadsheet.png alt=Spreadsheet screenshot.> <!-- 권장되지 않음 --> <!DOCTYPE html> <title>HTML sucks</title> <link rel=stylesheet href=base.css media=screen> 시각 장애인은 이미지가 무엇에 관한 것이 아닌지를 알려주는 단서가 거의 없으며 다 른 사용자는 어떤 비디오 또는 오디오 콘텐츠가 어떤 것인지 이해할 방법이 없을 수 도 있습니다. ( alt속성이 중복성을 가져올 이미지 및 CSS를 즉시 사용할 수없는 순수한 장식용 이 미지의 경우 대체 텍스트를 사용하지 않습니다 alt=.) 2.3.1.5 구조와 표현의 분리 구조와 표현의 분리 구조 (마크 업), 프리젠 테이션 (스타일) 및 동작 (스크립팅)을 엄격하게 유지하고 3 개 간의 상호 작용을 절대 최소로 유지하십시오. 즉, 문서 및 템플릿에 구조적 목적으로 만 사용되는 HTML 및 HTML 만 포함되어 있 는지 확인하십시오. 모든 CSS스타일을 스타일 시트로 옮기고 JS, JQUERY 스크립팅 을 스크립트로 옮기십시오. 또한 문서 및 템플릿에서 스타일 시트 및 스크립트를 가능한 한 적게 연결하여 접촉 영역을 가능한 작게 유지하십시오. 구조와 표현을 행동에서 분리하는 것은 유지 관리상의 이유로 중요합니다. 스타일 시 트와 스크립트를 업데이트하는 것보다 HTML 문서와 템플릿을 변경하는 것이 항상 더 비쌉니다. ","<link rel=stylesheet href=grid.css media=screen> <link rel=stylesheet href=print.css media=print> <h1 style=font-size: 1em;>HTML sucks</h1> <p>I’ve read about this on a few sites but now I’m sure: <u>HTML is stupid!!1</u> <center>I can’t believe there’s no way to control the styling of my website without doing everything all over again!</center> <!-- 권장되는 방법 --> <!DOCTYPE html> <title>My first CSS-only redesign</title> <link rel=stylesheet href=default.css> <h1>My first CSS-only redesign</h1> <p>I’ve read about this on a few sites but today I’m actually doing it: separating concerns and avoiding anything in the HTML of my website that is presentational. <p>It’s awesome! <!-- 권장되지 않음 --> The currency symbol for the Euro is &ldquo;&eur;&rdquo;. <!-- 권장되는 방법 --> The currency symbol for the Euro is “€”. 2.3.1.6 엔티티 참조 엔티티 참조를 사용하지 마십시오. 같은 엔티티 참조를 사용할 필요가 없습니다 &mdash;, &rdquo; 또는 &#x263a;, 파 일 및 편집자뿐만 아니라 팀들 사이에서 사용되는 동일한 인코딩 (UTF-8) 가정. 유일한 예외는 특별한 HTML의 의미 (등을 문자에 적용 < 하고 &)뿐만 아니라 제어 또는 (노 휴식 공간 등) 보이지 않는문자. ","<!-- 권장되지 않음 --> <!DOCTYPE html> <html> <head> <title>Spending money, spending bytes</title> </head> <body> <p>Sic.</p> </body> </html> <!-- 권장되는 방법 --> <!DOCTYPE html> <title>Saving money, saving bytes</title> <p>Qed. 2.3.1.7 태그 셀렉터 태그 셀렉터를 생략하십시오 (선택 사항). 파일 크기 최적화 및 스캔 가능성을 위해서는 선택적 태그를 생략하는 것이 좋습니 다. HTML5 스펙은 태그를 생략 할 수있는 정의합니다. (이 접근법은 웹 개발자가 일반적으로 가르치는 것과는 상당히 다른 광범위한 가이드 라인으로 유예 기간을 설정해야 할 수도 있습니다. 일관성과 단순성을 위해 선택이 아닌 모든 선택 태그를 생략하는 것이 가장 좋습니다.) 2.3.1.8 type속성 type스타일 시트 및 스크립트에 대한 속성을 생략하십시오 . type스타일 시트 (CSS를 사용하지 않는 한)와 스크립트 (JavaScript를 사용하지 않는 경우 제외)에 속성을 사용하지 마십시오 . type이러한 컨텍스트에서 속성을 지정 하는 것은 HTML5가 의미 text/css 하고 text/javascript 기본값으로 필요하지 않습니다 . 이것은 구형 브라우저에서도 안전하 ","<!-- 권장되지 않음 --> <link rel=stylesheet href=https://www.google.com/css/maia.css type=text/css> <!-- 권장되는 방법 --> <link rel=stylesheet href=https://www.google.com/css/maia.css> <!-- 권장되지 않음 --> <script src=https://www.google.com/js/gweb/analytics/autotrack.js type=text/javascript></script> <!-- 권장되는 방법 --> <script src=https://www.google.com/js/gweb/analytics/autotrack.js></script> <blockquote> <p><em>Space</em>, the final frontier.</p> </blockquote> <ul> <li>Moe <li>Larry <li>Curly 게 수행 할 수 있습니다. 2.3.2 HTML 서식 규칙 2.3.2.1 일반 서식 모든 블록, 목록 또는 표 요소에 대해 새 행을 사용하고 그러한 모든 하위 요소를 들 여 쓰기하십시오. 요소의 스타일에 관계없이 (CSS는 요소가 display속성 마다 다른 역할을 담당 할 수 있으므로 ) 모든 블록, 목록 또는 표 요소를 새 행에 배치합니다. 또한 블록,리스트 또는 테이블 요소의 하위 요소 인 경우 들여 쓰기를하십시오. (목록 항목 사이에 공백이있는 문제가 생기면 모든 li요소를 한 줄 에 입력하는 것이 허용됩니다 . 오류가 아닌 경고를 표시하는 것이 좋습니다.) ","</ul> <table> <thead> <tr> <th scope=col>Income <th scope=col>Taxes <tbody> <tr> <td>$ 5.00 <td>$ 4.50 </table> <md-progress-circular md-mode=indeterminate class=md-accent ng-show=ctrl.loading md-diameter=35> </md-progress-circular> <md-progress-circular md-mode=indeterminate class=md-accent ng-show=ctrl.loading md-diameter=35> </md-progress-circular> <md-progress-circular md-mode=indeterminate class=md-accent ng-show=ctrl.loading md-diameter=35> </md-progress-circular> 2.3.2.2 HTML 줄 바꿈 긴 줄을 끊으십시오 (선택 사항). HTML에 대해 열 제한 권장 사항은 없지만 가독성을 크게 향상시키는 경우 긴 줄을 줄 바꿈하는 것이 좋습니다. 줄 바꿈을 할 때, 각 연속 줄은 원래 줄에서 적어도 4 칸 더 들여 쓰기해야합니다. ","<!-- 권장되지 않음 --> <a class='maia-button maia-button-secondary'>Sign in</a> <!-- 권장되는 방법 --> <a class=maia-button maia-button-secondary>Sign in</a> 2.3.2.3 HTML 따옴표 속성 값을 인용 할 때는 큰 따옴표를 사용하십시오. 속성 값 주위 에는 작은 따옴표 ( ) 대신 double ( )을 사용하십시오 ''. ","/* 권장되지 않음: meaningless */ #yee-1901 {} /* 권장되지 않음: presentational */ 3장 CSS 3.1 CSS 스타일 규칙 3.1.1 CSS 유효성 가능하면 유효한 CSS를 사용하십시오. CSS 유효성 검사기 버그를 다루지 않거나 독점적 구문을 요구하지 않는 한 유효한 CSS 코드를 사용하십시오. W3C CSS 검사기 와 같은 도구를 사용 하여 테스트하십시오. 유효한 CSS를 사용하는 것은 측정 가능한 기준 품질 속성으로, 효과가없고 제거 할 수 있고 적절한 CSS 사용을 보장하는 CSS 코드를 찾을 수 있습니다. 3.1.2 ID 및 클래스 명명 의미있는 또는 일반적인 ID와 클래스 이름을 사용하십시오. 프레젠테이션이나 암호명 대신 항상 해당 요소의 목적을 반영하는 ID 또는 클래스 이 름을 사용하거나 다른 방식으로는 일반적인 이름을 사용하십시오. 요소의 목적을 반영하고 구체적으로 나타내는 이름은 가장 이해하기 쉬우 며 변경 가 능성이 적기 때문에 선호해야합니다. 일반 이름은 형제와 다른 의미가 없거나 의미가없는 요소의 대체로 사용됩니다. 그들 은 일반적으로 도우미로 필요합니다. 기능적 또는 제네릭 이름을 사용하면 불필요한 문서 또는 템플릿 변경 가능성을 줄일 수 있습니다. ",".button-green {} .clear {} /* 권장되는 방법: specific */ #gallery {} #login {} .video {} /* 권장되는 방법: generic */ .aux {} .alt {} /* 권장되지 않음 */ #navigation {} .atr {} /* 권장되는 방법 */ #nav {} .author {} 3.1.3 ID 및 클래스 이름 스타일 가능하면 짧지 만 필요한만큼 ID와 클래스 이름을 사용하십시오. 가능한 한 짧게하면서 ID 또는 클래스에 관한 내용을 전달하십시오. ID와 클래스 이름을 사용하면 이해할 수있는 수준의 코드 및 코드 효율성을 얻을 수 있습니다. 3.1.4 태그 선택자 태그 선택자로 ID 및 클래스 이름을 한정하지 마십시오. 필요한 경우 (예 : 도우미 클래스 사용) ID 또는 클래스와 함께 요소 이름을 사용하지 마십시오. 불필요한 조상 선별자를 피하는 것은 성능상의 이유로 유용합니다 . ","/* 권장되지 않음 */ ul#example {} div.error {} /* 권장되는 방법 */ #example {} .error {} /* 권장되지 않음 */ border-top-style: none; font-family: palatino, georgia, serif; font-size: 100%; line-height: 1.6; padding-bottom: 2em; padding-left: 1em; padding-right: 1em; padding-top: 0; /* 권장되는 방법 */ border-top: 0; font: 100%/1.6 palatino, georgia, serif; padding: 0 1em 2em; 3.1.5 통합 속성 가능하다면 통합 속성을 사용하십시오. CSS는 하나의 값만 명시 적으로 설정되는 경우에도 가능할 때마다 사용되어야 하는 다양한 속기 속성 (like font)을 제공합니다. 속기 속성을 사용하면 코드 효율성과 이해하기 쉽습니다. 3.1.6 0 및 단위 필요하지 않으면 0값 뒤에 단위 지정을 생략하십시오. ","flex: 0px; /* This flex-basis component requires a unit. */ flex: 1 1 0px; /* Not ambiguous without the unit, but needed in IE11. */ margin: 0; padding: 0; font-size: .8em; /* 권장되지 않음 */ color: #eebbcc; /* 권장되는 방법 */ color: #ebc; 필요하지 않으면 0값 뒤에 단위를 사용하지 마십시오 . 3.1.7 선행 0 값에서 앞에 오는 0을 생략하십시오. 0s를 -1과 1 사이의 값이나 길이 앞에 두지 마십시오 . 3.1.8 16 진법 가능한 경우 3 자리 16 진수 표기법을 사용하십시오. 이를 허용하는 색상 값의 경우 3 자의 16 진수 표기법이 더 짧고 간결합니다. 3.1.9 접두사 애플리케이션 별 접두사가있는 선택자 앞에 접두사 (선택 사항). 대규모 프로젝트와 다른 프로젝트 또는 외부 사이트에 포함 된 코드는 ID 및 클래스 이름에 접두어 (네임 스페이스로 사용)를 사용합니다. 짧고 고유 한 식별자 다음에 대 시를 사용하십시오. 네임 스페이스를 사용하면 이름 지정 충돌을 방지하고 검색 작업 및 바꾸기 작업과 같은 유지 관리 작업을보다 쉽게 수행 할 수 있습니다. ",".adw-help {} /* AdWords */ #maia-note {} /* Maia */ /* 권장되지 않음: does not separate the words “demo” and “image” */ .demoimage {} /* 권장되지 않음: uses underscore instead of hyphen */ .error_status {} /* 권장되는 방법 */ #video-id {} .ads-sample {} 3.1.10 ID 및 클래스 이름 구분 기호 ID 및 클래스 이름의 단어는 하이픈으로 구분하십시오. 이해력과 스캔 가능성을 높이기 위해 하이픈 이외의 문자 (아무 것도 포함하지 않는 문자)로 선택기에서 단어와 약어를 연결하지 마십시오. 3.1.11 해킹 사용자 에이전트 탐지 및 CSS 해킹을 피하십시오. 먼저 다른 접근 방법을 시도하십 시오. 사용자 에이전트 감지 또는 특수 CSS 필터, 해결 방법 및 해킹에 대한 스타일 차이 점을 해결하려고합니다. 효율적이고 관리가 용이 한 코드 기반을 달성하고 유지하기 위해서는 두 가지 방법 모두 최후의 수단으로 고려해야합니다. 다시 말하면 탐지 및 해킹을 무료로 통과 시키면 장기적으로 프로젝트에 해를 입힐 수 있습니다. 프로젝트 가 최소한의 저항을하는 경향이 있기 때문입니다. 즉, 탐지 및 해킹을 쉽게 사용할 수 있도록 허용하고 탐지 및 해킹을 더 자주 사용하는 것을 의미하며 너무 자주 자주 발 생합니다. ","background: fuchsia; border: 1px solid; -moz-border-radius: 4px; -webkit-border-radius: 4px; border-radius: 4px; color: black; text-align: center; text-indent: 2em; @media screen, projection { html { background: #fff; color: #444; } } 3.2 CSS 서식 규칙 3.2.1 선언 순서 선언을 알파벳순으로 표시하십시오. 기억하고 유지하기 쉬운 방식으로 일관된 코드를 얻기 위해 선언을 알파벳 순서로 작 성하십시오. 정렬 목적으로 공급 업체 특정 접두사를 무시하십시오. 그러나 특정 CSS 속성에 대 한 여러 공급 업체 별 접두사는 정렬 된 상태로 유지되어야합니다 (예 : -moz 접두 어는 -webkit 앞에옵니다). 3.2.2 내용 들여 쓰기 차단 모든 블록 컨텐츠를 들여 쓰십시오. 계층 구조를 반영하고 이해를 향상시키기 위해 규칙뿐만 아니라 선언 내의 모든 블록 컨텐츠를 들여 쓰십시오 . ","/* 권장되지 않음 */ .test { display: block; height: 100px } /* 권장되는 방법 */ .test { display: block; height: 100px; } /* 권장되지 않음 */ h3 { font-weight:bold; } /* 권장되는 방법 */ h3 { font-weight: bold; } 3.2.3 선언 중단 모든 선언 후에 세미콜론(;)을 사용하십시오. 일관성과 확장 성을 위해 모든 선언을 세미콜론으로 끝내십시오. 3.2.4 부동산 이름 정지 속성 이름의 콜론 다음에 공백을 사용하십시오. 일관성을 위해 항상 속성과 값 사이에 하나의 공백을 사용합니다 (그러나 속성과 콜 론 사이에는 공백이 없어야 함). ","/* 권장되지 않음: missing space */ #video{ margin-top: 1em; } /* 권장되지 않음: unnecessary line break */ #video { margin-top: 1em; } /* 권장되는 방법 */ #video { margin-top: 1em; } /* 권장되지 않음 */ a:focus, a:active { position: relative; top: 1px; } /* 권장되는 방법 */ h1, h2, 3.2.5 선언 블록 분리 마지막 선택기와 선언 블록 사이에 공백을 사용하십시오. 마지막 선택기와 선언 블록 을 시작하는 여는 중괄호 사이에는 항상 하나의 공백을 사용하십시오 . 여는 중괄호는 주어진 규칙에서 마지막 선택자와 동일한 줄에 있어야합니다. 3.2.6 선택자와 선언 분리 선택자와 선언을 줄 바꿈으로 구분하십시오. 각 선택기 및 선언에 항상 새 행을 시작하십시오. ","h3 { font-weight: normal; line-height: 1.2; } html { background: #fff; } body { margin: auto; width: 50%; } /* 권장되지 않음 */ @import url(https://www.google.com/css/maia.css); html { font-family: open sans, arial, sans-serif; } /* 권장되는 방법 */ @import url(https://www.google.com/css/maia.css); html { 3.2.7 규칙 분리 규칙을 새 줄로 구분하십시오. 규칙 사이에는 항상 빈 줄 (두 줄 바꿈)을 넣으십시오. 3.2.8 CSS 따옴표 속성 선택자와 특성 값에 대해 큰 따옴표 ''대신 single ( )을 사용하십시오 . URI 값 ( url()) 에 따옴표를 사용하지 마십시오 . 예외 : @charset규칙 을 사용해야 할 경우 큰 따옴표 를 사용하십시오. 작은 따옴표 는 허용되지 않습니다 . ","font-family: 'open sans', arial, sans-serif; } /* Header */ #adw-header {} /* Footer */ #adw-footer {} /* Gallery */ .adw-gallery {} 3.3 CSS 메타 규칙 3.3.1 섹션 설명 섹션 주석으로 섹션을 그룹화합니다 (선택 사항). 가능한 경우 주석을 사용하여 스타일 시트 섹션을 그룹화하십시오. 새 줄로 섹션을 구분하십시오. 꼬릿말 일관성 있게 코딩 하시기 바랍니다. 코드를 편집하는 경우 몇 분 정도 시간을내어 주변의 코드를보고 스타일을 결정하십 시오. 그들이 모든 산술 연산자 주위에 공백을 사용한다면, 역시 그렇게해야합니다. 주석에 주위에 해시 표시가 거의 없다면 주석 주위에 작은 상자가 있습니다. 스타일 지침의 요점은 공통된 코딩 어휘를 사용하여 사람들이 말하는 방식보다는 말 하고있는 것에 집중할 수 있도록하는 것입니다. 사람들이 어휘를 알 수 있도록 여기 에 글로벌 스타일 규칙을 제시하지만 지역 스타일 또한 중요합니다. 파일에 추가하는 코드가 기존 코드와 크게 다르다면 독자가 읽으 려 할 때 리듬을 벗어납니다. 이것을 피하십시오. ","4. 네이밍 규칙 4.1. 기본 네이밍 규칙 [일반 규칙] 이름은 영문 소문자, 숫자, 언더스코어(_)로 작성한다. [시작 이름] 이름은 영문 소문자로만 시작할 수 있다. 단, css 주석문은 영문 대문자 를 허용한다. [#시작 이름 - 잘못된 예 | 올바른 예] Btn | btn 2btn | btn2 _btn | btn btn_ | btn [약속어] 레이아웃 약속어, 객체 약속어, 이미지 약속어에 근거하여 작성한다. 다만, 약속어가 없으면 종류와 특성을 나타내도록 네이밍하거나 공통 네이밍 약속어를 작성 한다. [영문 소문자, 숫자, 언더스코어 조합] 영문 소문자, 숫자, 언더스코어(_)만 사용할 수 있다. 언더스코어(_)는 단어와 단어 조합할 때만 사용한다. 언더스코어(_)가 포함된 약속어는 숫자, 영문 소문자와 조합하여 사용할 수 있다. [#영문 소문자, 숫자, 언더스코어 조합 - 잘못된 예 | 올바른 예] (언더스코어) sectionList | section_list (숫자) - | no1, no2, no3 …. no10 ","4.2. id 및 class 네이밍 규칙 [id, class] ","id는 문서 전체의 고유 식별자 이므로 한 문서에서 동일한 id를 여러 번 사용하지 않 는다. 레이아웃을 제외한 id는 스타일을 지정하지 않는다. class는 문서에서 여러 번 사용할 수 있다. [레이아웃 약속어] 레이아웃에는 예약된 id만 사용한다. [#레이아웃 약속어 - 약속어 | 범위] #wrap | 페이지 전체 영역 #header | 머리글 영역 #container | 본문 영역 #content | 주요 콘텐츠 영역 #footer | 바닥글 영역 [팝업 레이아웃 약속어] 레이아웃 약속어 앞에 'pop_'를 조합하여 사용한다. [#팝업 레이아웃 약속어 - 약속어 | 범위] #pop_wrap | 페이지 전체 영역 #pop_header | 머리글 영역 #pop_container | 본문 영역 #pop_content | 주요 콘텐츠 영역 #pop_footer | 바닥글 영역 [레이아웃 네이밍 조합] 레이아웃에 디자인 속성을 추가/변경하려면 class를 사용한 다. [객체 네이밍] 객체는 class만 사용할 수 있으며, 전사 공통 마크업 템플릿의 class와 중복되지 않아 야 한다. 개발과 연동되는 동적 객체도 class만 사용한다. 팝업, iframe에도 동일한 규칙을 적용한다. [#객체 네이밍 - 분류 | 약속어 | 영역/갹체] ","(공통) | .gnb | 최상위 전역 내비게이션 영역 (공통) | .sta | 서비스 이름, 연관 서비스, 검색 영역 (공통) | .lnb_ | 현재 서비스의 지역 내비게이션 영역 (공통) | .snb_ | 측면 내비게이션 영역 (공통) | .aside_ | 문서의 주요 부분을 표시하고 남은 콘텐츠 영역 (공통) | .spot_ | 강조하는 상위 콘텐츠 영역 (공통) | .path_ | 현재 페이지의 경로 (공통) | .nav_ | 내비게이션 요소 (공통) | .ad_ | 광고 요소 (공통) | .paginate | 페이지 목록 요소 (공통) | .ly | 레이아웃 요소 (공통) | #u_skip | 스킵네비게이션 (공통) | .blind | 숨김영역 (공통) | .u_ | 공통요소 (그루핑) | .section_ heading | 태그(h1~h6)를 포함한 요소들의 그루핑 (그루핑) | .group_ section | 보다 낮은 단계의 heading 태그를 포함한 요소들 의 그루핑 (그루핑) | ._area | 위치에 제한이 없는 특정 기능을 수행하는 요소들의 그루핑 [class 네이밍 확장] 종속 확장 class - 기본형 class에 종속되어 여백, 색깔, 행간 등의 몇 가지 속성을 부여하고 할 때 사용하는 class 독립 확장 class - 기본형 class의 변형이 타입으로 분류할 만큼 클 경우 사용하는 class [#class 네이밍 확장 - 기본형 | 확장형 | 설명] (기본형) mykin_list | (확장형) mykin_list_v1, mykin_list_v2... | (설명) 종속 확장 class (기본형) mykin_list | (확정형) mykin_list2, mykin_list3 | (설명) 독립 확장 class 4.3. 이미지 네이밍 규칙 ","[이미지 네이밍] 같은 분류의 이미지가 두 개 이상이면 파일 이름 마지막에 숫자를 추가하여 구분한 다. 이미지 네이밍은 이미지 확장자와 관계 없이 순차적으로 적용한다. 예) bu_dot1.git, bu_dot2.jpg, bu_dot3.png 임시 이미지는 tmp_를 조합한다. 예) tmp_myeonguni.png 이미지 약속어는 다음 약속어 분류에 근거하여 작성한다. [#이미지 네이밍 - 약속어 | 분류] h_ | 제목 p_ | 문장 gnb_, lnb_, snb_ | 내비게이션 tab_ | 탭 btn_ | 버튼 bu_ | 볼릿 ico_ | 아이콘 line_ | 선 bg_ | 배경, 박스 img_ | 이미지 _off, _over, _on | 상태 변화 ad_ | 광고 tmp_ | 임시 sp_ | 스프라이트 이미지 [이미지 네이밍 조합] 이미지 이름은 '형태_의미_상태' 순서로 조합한다. [#이미지 네이밍 조합 - 잘못된 예 | 올바른 예 | 설명] on_recommend_tab1 | tab1_recomm_on | '형태_의미_상태' 순서로 조합한다. bnm.gif | btn_naver_mail.gif | 임의로 축약하지 않는다. btn_Search.gif | btn_srch.gif | 영문 소문자를 사용한다. 1btn_search.gif | btn_srch.gif | 숫자로 시작하지 않는다. 4. 파일 및 폴더 네이밍 규칙 ","[파일 및 폴더 네이밍] 다음 분류와 예제를 따른다. [#파일 및 폴더 네이밍 - 분류 | 예제 | 설명] (HTML) | news.html | (설명) '서비스영문이름.html' 로 사용 (HTML) | pop_.html | (설명) 팝업 파일을 사용 (HTML) | ifr_.html | (설명) iframe 파일을 사용 (HTML) | Inc_.html | (설명) Include 파일 (HTML) | tmp_.html | (설명) 임시파일을 사용 (CSSS) | news.css | (설명) '서비스영문이름.css'로 사용 (Folder) | p_yymmdd_ | (설명) 프로젝트이름 신규 프로젝트 작업 시 사용 (Folder) | s_yymmdd_ | (설명) 서스테이닝이름서스테이닝 작업 시 사용 (Folder) | img, css, js | (설명) image, css, javascript 폴더 사용 (Folder) | p_yymmdd__프로젝트명메뉴명 | (설명) HTML 파일의 폴더 분류가 필요 한 경우 사용 (Folder) | tmp_ | (설명) 임시파일의 폴더 분류가 필요한 경우 사용 [파일 및 폴더 네이밍 조합] HTML 파일은 '메뉴이름_의미_상태' 순서로 조합한다. CSS 파일은 '서비스이름'을 맨 앞으로 하여 조합한다. [#파일 및 폴더 네이밍 조합 - 분류 | 조합 예 | 설명] (HTML) | news_nboard_view.html | (설명) '메뉴이름_의미_상태' 순서로 조합한다. (CSS) | news_home.css | (설명) '서비스이름'을 맨 앞으로 하여 조합한다. (CSS) | news_admin.css | (설명) 위와 동일 (CSS) | news_pop.css, news_nanum.css | (설명) 위와 동일 ","/* 권장되지 않음 */ <img src=lezhin.png> <img src=lezhin.png alt> <img src=lezhin.png alt=> <img src=lezhin.png title=이미지 설명 내용> <img src=lezhin.png alt=이미지 설명 내용 title=이미지 설명 내용> /* 권장되는 방법 */ <img src=lezhin.png alt=이미지 설명 내용> /* 권장되지 않음 */ <a href=/> <img src=lezhin.png alt=이미지 설명 내용> 링크 </a> /* 권장되는 방법 */ <a href=/> <img src=lezhin.png alt> 링크 </a> /* 권장되지 않음 */ <a href=/ style=background:url(lezhin.png) no-repeat></a> /* 권장되는 방법 */ <a href=/ style=background:url(lezhin.png) no-repeat>링크</a> 5. 웹접근성 가이드라인 5.1. 의미를 전달하고 있는 이미지에 대체 텍스트를 제공한다. 대체 텍스트는 이미지의 시각적 의도와 동등한 내용을 전달한다. 대체 텍스트는 중복으로 제공하지 않는다. 기대 효과 전맹 사용자에게 음성 해설을 제공할 수 있다. 관련 표준 1.1.1 Non-text Content 평가 도구 OpenWAX ","/* 권장되지 않음 */ <body style=background:#fff> <p style=color:#777>text</p> </body> /* 권장되는 방법 */ <body style=background:#fff> <p style=color:#767676>text</p> </body> /* 권장되지 않음 */ <body style=background:#fff> <input style=border:1px solid #777> </body> /* 권장되는 방법 */ <body style=background:#fff> <input style=border:1px solid #767676> </body> 5.2. 전경 콘텐츠와 배경은 4.5:1 이상의 명도 대비를 유지한다. # 전경 콘텐츠는 정보를 전달하고 있는 '문자, 아이콘, 콘트롤(a, button, input, select, textarea)'의 선과 면을 의미한다. 문자 크기가 bold 19px 이상 또는 normal 24px 이상인 경우 3:1 이상의 명도 대비 를 유지한다. 아이콘, 콘트롤 등 시각 정보가 3px 이상 두꺼운 경우 3:1 이상의 명도 대비를 유지 한다. 기대 효과 저시력 사용자가 내용을 빠르게 인지할 수 있다. 관련 표준 1.4.3 Contrast(Minimum) 1.4.11 Graphics Contrast 1.4.12 User Interface Component Contrast(Minimum) 평가 도구 Colour Contrast Check ColorA11y 5.3. 화면을 400%까지 확대할 수 있다. ","/* 권장되지 않음 */ http://www.president.go.kr/ /* 권장되는 방법 */ https://www.whitehouse.gov/ /* 권장되지 않음 */ a:hover{ color: #000; } /* 권장되는 방법 */ a:hover, a:focus{ color: #000; } /* 권장되지 않음 */ $(document).on(mouseover, .gnb a, function() { ... }); /* 권장되는 방법 */ $(document).on(mouseover focus, .gnb a, function() { ... }); 너비 1,280 픽셀 해상도 모니터에서 400%까지 확대할 수 있다. 모바일 단말에서는 테스트하지 않는다. 화면을 400% 확대한 상태에서 내용과 기능에 손실이 없어야 하고, 2차원 스크롤이 발생하지 않아야 한다. 기대 효과 저시력 사용자가 내용을 빠르게 인지할 수 있다. 하나의 소스 만으로 모든 해상도의 출력 장치에 대응 가능하다. 관련 표준 1.4.10 Zoom content 5.4. 키보드만으로 조작할 수 있다. # 구현된 키보드 접근 순서는 논리적으로 설명할 수 있어야 한다. 초점을 받은 요소는 시각적 단서를 제공해야 한다. 기대 효과 전맹 또는 상지 장애가 있는 사용자와 키보드를 선호하는 사용자의 탐색과 조작을 돕 는다. 관련 표준 2.1.1 Keyboard 2.1.2 No Keyboard Trap 2.4.3 Focus Order 2.4.7 Focus Visible ","/* 권장되지 않음 */ 10초 후 다음 페이지로 넘어갑니다. [다음 페이지로 즉시 이동] /* 권장되는 방법 */ 20초 후 다음 페이지로 넘어갑니다. [취소] [다음 페이지로 즉시 이동] 20초 후 다음 페이지로 넘어갑니다. [20초 연장] [다음 페이지로 즉시 이동] /* 권장되지 않음 */ 콘텐츠가 자동으로 슬라이드 되고 있는 상황에서 정지하거나 이전, 다음 콘텐츠를 탐색 할 수 없다. /* 권장되는 방법 */ 5.5. 사용할 수 있는 충분한 시간을 제공한다. # 시간 제한이 있는 정보는 시간 제한을 끄거나, 또는 최소 20초 이상 10회까지 연장할 수 있다. 자동으로 갱신되는 정보에는 '정지, 이전, 다음' 기능을 제공한다. 콘텐츠가 자동으로 슬라이드 되고 있지만 정지, 이전, 다음 기능을 제공하고 있다. 기대 효과 학습장애 또는 난독증세가 있는 사람이 내용을 이해할 수 있다. 관련 표준 2.2.1 Timing Adjustable 2.2.2 Pause, Stop, Hide 5.6. 발작을 유발하는 콘텐츠를 제공하지 않는다. # 1초에 3~50회 사이의 번쩍이는 콘텐츠는 광과민성 발작을 유발할 수 있다. 광과민성 발작은 소아 또는 간질 경험이 있는 사람에게 더 위험하다. 포켓몬 발작 사고 영상 - https://www.youtube.com/watch?v=gwoQRKCEHgY // 소 아 또는 간질 경험이 있는 사람에게 발작 위험. 기대 효과 소아 또는 간질 경험이 있는 사람의 발작을 예방할 수 있다. 관련 표준 2.3.1 Three Flashes or Below Threshold 2.3.2 Three Flashes ","/* 권장되지 않음 */ <body> <h1>레진엔터테인먼트</h1> <nav>...</nav> <main>...</main> /* 권장되는 방법 */ <body> <a href=#main>본문으로 건너뛰기</a> <h1>레진엔터테인먼트</h1> <nav>...</nav> <main id=main>...</main> 5.7. 반복되는 콘텐츠 블록을 건너뛸 수 있다. # 일반적으로 글로벌 탐색 바와 로컬 탐색 바는 반복되는 콘텐츠 블록이다. 반복되는 콘텐츠 블록이 있는 경우 페이지 시작 위치에 '본문으로 건너뛰기' 링크를 제공한다. 기대 효과 전맹 또는 상지 장애가 있는 사용자와 키보드를 선호하는 사용자의 탐색과 조작을 돕 는다. 관련 표준 2.4.1 Bypass Blocks 5.8. 모든 문서의 제목은 고유하고 식별할 수 있다. # 제목 콘텐츠를 문서마다 다르게 설명함으로써 현재 문서의 용도를 식별할 수 있다. /* 권장되지 않음 */ <head> <title>레진코믹스<title> /* 권장되는 방법 */ ","<head> <title>준법시민(99회) - 레바툰 - 레진코믹스<title> 기대 효과 전맹 사용자가 링크 이동 결과를 음성으로 확인할 수 있다. 문서의 용도를 빠르게 파악할 수 있다. 검색엔진이 올바른 페이지를 수집하도록 돕는다. 유저 에이전트 탭의 식별 가능성이 높아진다. 관련 표준 2.4.2 Page Titled 5.9. 링크와 버튼 텍스트는 콘텐츠의 목적을 알 수 있다. # 주변 콘텐츠와 분리하여 독립적으로 접근해도 링크 또는 버튼의 목적을 알 수 있어야 한다. 링크 또는 버튼에 독립적으로 접근하여 이해하기 어려운 경우 동일한 단락, 목록, 셀, 연결된 헤더셀(p, li, td, th)에 링크 또는 버튼의 목적을 설명해야 한다. /* 권장되지 않음 */ <a href=# download>설치하기</a> <button type=button>삭제하기</button> /* 권장되는 방법 */ <a href=# download>레진코믹스 안드로이드 애플리케이션 설치하기</a> <p>레진코믹스 안드로이드 애플리케이션 <a href=# download>설치하기</a></p> <li>레진코믹스 안드로이드 애플리케이션 <a href=# download>설치하기</a></li> <td>레진코믹스 안드로이드 애플리케이션 <a href=# download>설치하기 </a></td> <tr> <th scope=row>레진코믹스 안드로이드 애플리케이션</th> <td><a href=# download>설치하기</a></td> </tr> /* 권장되는 방법 */ <button type=button>구매내역 삭제하기</button> <p>구매내역 <button type=button>삭제하기</button></p> <li>구매내역 <button type=button>삭제하기</button></li> ","/* 권장되지 않음 */ <div class=article>...</div> <div class=section>...</div> <div class=nav>...</div> <div class=aside>...</div> /* 권장되는 방법 */ <article> <h2>...</h2> ... </article> <section> <h2>...</h2> ... </section> <nav> <h2>...</h2> ... </nav> <td>구매내역 <button type=button>삭제하기</button></td> <tr> <th scope=row>구매내역</th> <td><button type=button>삭제하기</button></td> </tr> 기대 효과 전맹 사용자가 링크 또는 버튼에 독립적으로 또는 순차적으로 접근하는 경우 링크 또 는 버튼의 목적을 음성으로 전달할 수 있다. 관련 표준 2.4.4 Link Purpose(In Context) 평가 도구 OpenWAX 5.10. 섹션에는 의미 있는 마크업과 헤딩이 있다. # 섹션 콘텐츠는 의미에 알맞은 article, section, nav, aside 요소로 마크업한다. 섹션 콘텐츠에는 문서의 개요 체계에 알맞은 헤딩(h1~h6)을 제공한다. 명시적 헤딩 기법을 사용한다. 명시적 헤딩 기법은 하나의 문서에 h1 요소를 한 번 사용한다. ","<aside> <h2>...</h2> ... </aside> /* 권장되지 않음 */ <html> /* 권장되는 방법 */ <html lang=ko> 기대 효과 보조기기 사용자가 원하는 탐색 지점으로 빠르게 건너 뛸 수 있다. 검색엔진이 올바를 페이지를 수집하도록 돕는다. 유저 에이전트 확장 기능 사용자에게 문서 개요를 전달할 수 있다. 관련 표준 2.4.6 Headings and Labels 2.4.10 Section Headings 평가 도구 HTML5 Outliner 5.11. 문서의 휴먼 랭귀지 속성을 제공한다. # html 요소에 lang 속성을 제공한다. 한글, 영문, 일문, 중문에는 이를 식별하기 위한 ISO-639-1 코드값 ko, en, ja, zh가 있다. 기대 효과 보조기기와 검색엔진이 문서의 휴먼 랭귀지를 식별할 수 있다. 관련 표준 3.1.1 Language of Page 3.1.2 Language of Parts 평가 도구 OpenWAX 5.12. 문맥 변경은 예측할 수 있다. # 사용자가 실행하기 전까지는 문서를 갱신(이동, 추가, 삭제, 재배치)하거나, 팝업(새 ","/* 권장되지 않음 */ 초점을 넣었을 뿐인데 자동으로 페이지 갱신 또는 이동. 페이지 로드 시 자동 팝업. 초점 자동 이동. /* 권장되는 방법 */ 클릭 또는 리턴(엔터) 키를 통해 페이지 갱신 또는 이동. 클릭 또는 리턴(엔터) 키를 통해 팝업 생성. 초점을 자동으로 옮기지 않음. /* 권장되지 않음 */ <form> <input type=search> <button>검색</button> </form> /* 권장되는 방법 */ <form> <label for=search>검색</label> <input id=search type=search> <button>검색</button> 창, 레이어)을 띄우거나, 초점을 다른 곳으로 옮기지 않는다. 사용자가 초점을 넣거나 마우스를 올리는 것은 기능을 실행하기 위한 의도로 보지 않 기 때문에 문맥을 변경하면 안 된다. '대한민국' 선택의 결과로 대한민국의 '시/군/구'를 선택하는 항목이 등장했다면 이것 은 문맥의 변화가 아니다. 기대 효과 보조 기기 사용자가 혼란에 빠지는 것을 예방할 수 있다. 관련 표준 3.2.1 On Focus 3.2.2 On Input 3.2.5 Change on Request 5.13. 폼 콘트롤 요소에 설명을 제공한다. # 모든 input, textarea, select 요소에는 콘트롤을 설명하는 label 요소를 맵핑하거나 또는 title 속성을 제공한다. ","</form> /* 권장되는 방법 */ <form> <input type=search title=검색> <button>검색</button> </form> /* 권장되지 않음 */ 오류 입력 양식에 붉은 색 보더 처리. // 시각에 의존하고 있다. 문자로 알려야 한다. 입력 양식에 오류가 있습니다. // 오류 식별 불가. 로그인 오류. 비밀번호는 특수문자, 숫자, 알파벳을 하나 이상 포함해야 합니다. // 정 정 의견이 보안을 해치고 있음. 여러 단계(여러 페이지)에 걸쳐 작성한 내용 중 이전 단계의 내용을 검토할 수 없고 제 출 후 수정할 수 없음. // 제출 전 또는 제출 수 수정할 수 있어야 한다. 기대 효과 보조기기가 폼 콘트롤에 독립적으로 접근했을 때 콘트롤에 대한 설명을 제공할 수 있 다. 관련 표준 2.4.6 Headings and Labels 3.3.2 Labels or Instructions 평가 도구 OpenWAX 5.14. 실수를 예방하고 정정하는 것을 돕는다. # 입력 오류를 자동으로 감지할 수 있는 경우에만 이 지침을 적용한다. 예를 들면 이름 을 잘못 입력하는 경우 정정 의견을 제시할 수 없다. 오류 항목이 무엇인지 식별할 수 있도록 문자로 알리고 정정 의견을 제시한다. 예를 들면 생년월일 양식에 오류가 있습니다. 입력 형식은 yyyy-mm-dd 입니다. 정정 의견은 보안을 유지하는 수준에서 제시한다. 예를 들면 아이디 또는 비밀번호 입력 오류. 입력 내용을 전송하기 전 검토 후 교정할 수 있다. 또는 제출한 내용을 되돌릴 수 있 다. ","/* 권장되는 방법 */ 생년월일 양식에 오류가 있습니다. 입력 형식은 yyyy-mm-dd 입니다. // 오류 식별 가 능. 정정 의견 제시. 아이디 또는 비밀번호 입력 오류. 5회 이상 오류 발생 시 계정잠금 상태로 전환합니다. // 오류 식별 가능. 정정 의견 제시. 보안을 해치지 않음. 여러 단계(여러 페이지)에 걸쳐 작성한 내용 중 이전 단계의 내용을 검토 후 수정할 수 있음. 또는 이전 단계의 내용을 수정할 수 없지만 제출 후 수정할 수 있음. /* 권장되지 않음 */ <div><span>...</div> // span 종료 태그 생략 오류. <span><a><div>...</div></a></span> // span 요소가 div를 감싼 것은 오류. <div class=aaa class=bbb>...</div> // 속성은 한 번만 선언해야 한다. <div id=xyz>...</div><div id=xyz>...</div> // xyz 값은 페이지에서 유일해야 한다. /* 권장되는 방법 */ <div><span>...</span></div> <div><a><div>...</div></a></div> <div class=aaa bbb>...</div> 기대 효과 사용자가 실수하지 않도록 예방하고 실수를 교정할 수 있다. 관련 표준 3.3.1 Error Identification 3.3.3 Error Suggestion 3.3.4 Error Prevention (Legal, Financial, Data) 3.3.6 Error Prevention (All) 5.15. HTML 문법을 준수한다. # 시작 태그에서 닫는(self-closing) 요소를 제외하고 시작 태그, 종료 태그, 따옴표를 생략하지 않는다. 명세에 따라 중첩한다. 속성을 중복 선언하지 않는다. 모든 id 속성의 값은 하나의 문서 안에서 중복 없이 유일하다. ","<div id=abc>...</div><div id=xyz>...</div> 기대 효과 보조기기의 웹 문서 해석 오류를 예방할 수 있다. 관련 표준 "]